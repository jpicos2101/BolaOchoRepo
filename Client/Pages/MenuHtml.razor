@page "/menuhtml"
@using System.Text
@using System.ComponentModel.DataAnnotations
@using System.ComponentModel
@using System.Reflection

@code {
    [Parameter]
    public string FormattedHtml { get; set; } = string.Empty;

    public class MenuContent
    {
        public required List<Food> LstFoods { get; set; }
        public required List<Soda> LstSodas { get; set; }
        public required List<Beer> LstBeers { get; set; }
        public required List<Spirit> LstSpirits { get; set; }
    }

    public class Item
    {
        public string Name { get; set; } = string.Empty;

        public required string Description { get; set; }

        public required string PhotoPath { get; set; }

        public required decimal Price { get; set; }
    }

    public class Food : Item
    {
        public string? Portion { get; set; }

        public List<SauceEnum>? LstSauces { get; set; }

        public List<FoodOptions>? LstOptions { get; set; }
    }

    public class Drink : Item
    {
        public string? DrinkType { get; set; }

        public int? Capacity { get; set; }

        public string? Paring { get; set; }

        public List<DrinkOptions>? LstOptions { get; set; }
    }

    public class Soda : Drink
    {
        public Soda()
        {
            DrinkType = "Soda";
        }
    }

    public class Beer : Drink
    {
        public Beer()
        {
            DrinkType = "Beer";
        }

        public bool IsCraftBeer { get; set; } = false;
    }

    public class Spirit : Drink
    {
        public Spirit()
        {
            DrinkType = "Spirit";
        }
    }

    public class FoodOptions
    {
        public required int PortionGrams { get; set; }

        public required decimal Price { get; set; }

        public string? Dressing { get; set; }
    }

    public class DrinkOptions
    {
        public required string Name { get; set; }

        public required int Capacity { get; set; }

        public required decimal Price { get; set; }

        public string? Extras { get; set; }
    }

    public enum SauceEnum
    {
        [Description("Bbq")]
        Bbq,
        [Description("Hot Bbq")]
        HotBbq,
        [Description("Buffalo")]
        Buffalo,
        [Description("T. Habanero")]
        TamarindoHabanero,
        [Description("M. Habanero")]
        MangoHabanero,
        [Description("Smoky Bbq")]
        SmokyBbq,
        [Description("L. Pepper")]
        LemonPepper,
        [Description("Parmesano")]
        Parmesano
    }

    public Dictionary<string, int> LstSauces = new Dictionary<string, int>();

    protected override void OnInitialized()
    {
        LstSauces.Add("Bbq", 0);
        LstSauces.Add("SmokyBbq", 0);
        LstSauces.Add("LemonPepper", 0);
        LstSauces.Add("Parmesano", 0);
        LstSauces.Add("HotBbq", 1);
        LstSauces.Add("Buffalo", 1);
        LstSauces.Add("TamarindoHabanero", 2);
        LstSauces.Add("MangoHabanero", 2);

        var menuContent = new MenuContent()
            {
                LstFoods = new List<Food>()
            {
                new Food()
                {
                    Name = "Alitas",
                    Description = "Alitas de pollo acompañadas de verduras y aderezo ranch",
                    Portion = "(350gr/700gr)",
                    PhotoPath = "",
                    Price = 0,
                    LstSauces = new List<SauceEnum>()
                    {
                        SauceEnum.Bbq,
                        SauceEnum.SmokyBbq,
                        SauceEnum.LemonPepper,
                        SauceEnum.Parmesano,
                        SauceEnum.HotBbq,
                        SauceEnum.Buffalo,
                        SauceEnum.TamarindoHabanero,
                        SauceEnum.MangoHabanero
                    },
                    LstOptions = new List<FoodOptions>(){
                        new FoodOptions()
                        {
                            PortionGrams = 350,
                            Price = 90
                        },
                        new FoodOptions()
                        {
                          PortionGrams = 700,
                          Price = 179
                        }
                    }
                },
                new Food()
                {
                    Name = "Boneless",
                    Description = "Bolitas de pollo empanizadas acompañadas de verduras y aderezo ranch",
                    Portion = "(300gr)",
                    PhotoPath = "",
                    Price = 169M,
                    LstSauces = new List<SauceEnum>()
                    {
                        SauceEnum.Bbq,
                        SauceEnum.HotBbq,
                        SauceEnum.Buffalo,
                        SauceEnum.TamarindoHabanero,
                        SauceEnum.MangoHabanero
                    }
                },
                new Food()
                {
                    Name = "Tenders",
                    Description = "Tiras de pollo empanizadas acompañadas de verduras y aderezo ranch",
                    Portion = "(300gr)",
                    PhotoPath = "",
                    Price = 169M,
                    LstSauces = new List<SauceEnum>()
                    {
                        SauceEnum.Bbq,
                        SauceEnum.HotBbq,
                        SauceEnum.Buffalo,
                        SauceEnum.TamarindoHabanero,
                        SauceEnum.MangoHabanero
                    }
                },
                new Food()
                {
                    Name = "Hamburguesa de Pollo",
                    Description = "Hamburguesa de tenders de pollo, pan brichole y verduras",
                    Portion = "",
                    PhotoPath = "",
                    Price = 150M,
                    LstSauces = new List<SauceEnum>()
                    {
                        SauceEnum.Buffalo
                    }
                },
                new Food()
                {
                    Name = "Hamburguesa de Res",
                    Description = "Hamburguesa de arrachera, pan brichole y verduras",
                    Portion = "",
                    PhotoPath = "",
                    Price = 160M
                },
                new Food()
                {
                    Name = "Dedos de Queso",
                    Description = "Barritas de queso empanizado con catsup como aderezo",
                    Portion = "(x6)",
                    PhotoPath = "",
                    Price = 109M
                },
                new Food()
                {
                    Name = "Papas a la Francesa",
                    Description = "Aderezadas con lemon pepper acompañadas de catsup",
                    Portion = "(300gr)",
                    PhotoPath = "",
                    Price = 75M,
                    LstOptions = new List<FoodOptions>()
                    {
                        new FoodOptions()
                        {
                            PortionGrams = 300,
                            Price = 75M
                        },
                        new FoodOptions()
                        {
                            PortionGrams = 300,
                            Price = 100M,
                            Dressing = "con queso"
                        },
                    }
                },
                new Food()
                {
                    Name = "Tiras de Camote",
                    Description = "Aderezadas con lemon pepper acompañadas de catsup",
                    Portion = "(300gr)",
                    PhotoPath = "",
                    Price = 75M
                },
                new Food()
                {
                    Name = "Papas Gajo",
                    Description = "Acompañadas de catsup",
                    Portion = "(300gr)",
                    PhotoPath = "",
                    Price = 75M,
                    LstOptions = new List<FoodOptions>()
                    {
                        new FoodOptions()
                        {
                            PortionGrams = 300,
                            Price = 75M
                        },
                        new FoodOptions()
                        {
                            PortionGrams = 300,
                            Price = 100M,
                            Dressing = "con queso"
                        },
                    }
                },
                new Food()
                {
                    Name = "Salchipulpos",
                    Description = "Salchita frita acompañadas de catsup",
                    Portion = "(250gr)",
                    PhotoPath = "",
                    Price = 80M
                },
                new Food()
                {
                    Name = "Salchicha Botanera",
                    Description = "Aderezada con limón, sal y salsas",
                    Portion = "(300gr)",
                    PhotoPath = "",
                    Price = 85M
                },
                new Food()
                {
                    Name = "Aros de Cebolla",
                    Description = "Aros de cebolla frita acompañadas de catsup",
                    Portion = "(150gr)",
                    PhotoPath = "",
                    Price = 75M
                },
                new Food()
                {
                    Name = "Carne Seca",
                    Description = "Acompañada de pepino y aderezada con limón y salas",
                    Portion = "(50gr)",
                    PhotoPath = "",
                    Price = 120M
                },
                new Food()
                {
                    Name = "Papas Doradas",
                    Description = "Papas doradas aderezadas con limón y salas negras y rojas",
                    Portion = "(100gr)",
                    PhotoPath = "",
                    Price = 55M
                }
            },
                LstSodas = new List<Soda>()
            {
              new Soda()
              {
                Name = "Coca Cola",
                Description = "",
                Capacity = 355,
                PhotoPath = "../products/drinks/coca_cola_167x120.png",
                Price = 35M
              },
              new Soda()
              {
                Name = "Coca Cola Light",
                Description = "",
                Capacity = 355,
                PhotoPath = "../products/drinks/coca_light_167x120.png",
                Price = 35M
              },
              new Soda()
              {
                Name = "Fanta",
                Description = "",
                Capacity = 355,
                PhotoPath = "../products/drinks/fanta_167x120.png",
                Price = 35M
              },
              new Soda()
              {
                Name = "Fresca",
                Description = "",
                Capacity = 355,
                PhotoPath = "../products/drinks/fresca_167x120.png",
                Price = 35M
              }
            },
                LstBeers = new List<Beer>()
            {
                new Beer()
                {
                    Name = "TKT Light",
                    Description = "",
                    Capacity = 355,
                    PhotoPath = "../products/drinks/tkt_light_167x120.png",
                    Price = 0,
                    LstOptions = new List<DrinkOptions>
                    {
                        new DrinkOptions()
                        {
                            Name = "TKT Light",
                            Capacity = 355,
                            Price = 35
                        },
                        new DrinkOptions()
                        {
                            Name = "Cubeta TKT Light",
                            Capacity = 0,
                            Price = 300,
                            Extras = "Cubeta con 10 botellas de 355 ml"
                        }
                    }
                },
                new Beer()
                {
                    Name = "TKT Roja",
                    Description = "",
                    Capacity = 355,
                    PhotoPath = "../products/drinks/tkt_roja_167x120.png",
                    Price = 0,
                    LstOptions = new List<DrinkOptions>
                    {
                        new DrinkOptions()
                        {
                            Name = "TKT Roja",
                            Capacity = 355,
                            Price = 35
                        },
                        new DrinkOptions()
                        {
                            Name = "Cubeta TKT Roja",
                            Capacity = 0,
                            Price = 300,
                            Extras = "Cubeta con 10 botellas de 355 ml"
                        }
                    }
                },
                new Beer()
                {
                    Name = "Pacifico",
                    Description = "",
                    Capacity = 355,
                    PhotoPath = "../products/drinks/pacifico_167x120.png",
                    Price = 0,
                    LstOptions = new List<DrinkOptions>
                    {
                        new DrinkOptions()
                        {
                            Name = "Pacifico",
                            Capacity = 355,
                            Price = 40
                        },
                        new DrinkOptions()
                        {
                            Name = "Cubeta Pacifico",
                            Capacity = 0,
                            Price = 380,
                            Extras = "Cubeta con 10 botellas de 355 ml"
                        }
                    }
                },
                new Beer()
                {
                    Name = "Corona",
                    Description = "",
                    Capacity = 355,
                    PhotoPath = "../products/drinks/corona_167x120.png",
                    Price = 0,
                    LstOptions = new List<DrinkOptions>
                    {
                        new DrinkOptions()
                        {
                            Name = "Corona",
                            Capacity = 355,
                            Price = 40
                        },
                        new DrinkOptions()
                        {
                            Name = "Cubeta Corona",
                            Capacity = 0,
                            Price = 380,
                            Extras = "Cubeta con 10 botellas de 355 ml"
                        }
                    }
                },
                new Beer()
                {
                    Name = "Victoria",
                    Description = "",
                    Capacity = 355,
                    PhotoPath = "../products/drinks/victoria_167x120.png",
                    Price = 0,
                    LstOptions = new List<DrinkOptions>
                    {
                        new DrinkOptions()
                        {
                            Name = "Victoria",
                            Capacity = 355,
                            Price = 40
                        },
                        new DrinkOptions()
                        {
                            Name = "Cubeta Victoria",
                            Capacity = 0,
                            Price = 380,
                            Extras = "Cubeta con 10 botellas de 355 ml"
                        }
                    }
                },
                new Beer()
                {
                    Name = "Boheima Clara",
                    Description = "",
                    Capacity = 355,
                    PhotoPath = "../products/drinks/clara_167x120.png",
                    Price = 0,
                    LstOptions = new List<DrinkOptions>
                    {
                        new DrinkOptions()
                        {
                            Name = "Bohemia Clara",
                            Capacity = 355,
                            Price = 40
                        },
                        new DrinkOptions()
                        {
                            Name = "Cubeta Bohemia Clara",
                            Capacity = 0,
                            Price = 380,
                            Extras = "Cubeta con 10 botellas de 355 ml"
                        }
                    }
                },
                new Beer()
                {
                    Name = "Boheima Obscura",
                    Description = "",
                    Capacity = 355,
                    PhotoPath = "../products/drinks/obscura_167x120.png",
                    Price = 0,
                    LstOptions = new List<DrinkOptions>
                    {
                        new DrinkOptions()
                        {
                            Name = "Bohemia Obscura",
                            Capacity = 355,
                            Price = 40
                        },
                        new DrinkOptions()
                        {
                            Name = "Cubeta Bohemia Obscura",
                            Capacity = 0,
                            Price = 380,
                            Extras = "Cubeta con 10 botellas de 355 ml"
                        }
                    }
                },
                new Beer()
                {
                    Name = "Bohemia Cristal",
                    Description = "",
                    Capacity = 355,
                    PhotoPath = "../products/drinks/cristal_167x120.png",
                    Price = 0,
                    LstOptions = new List<DrinkOptions>
                    {
                        new DrinkOptions()
                        {
                            Name = "Bohemia Cristal",
                            Capacity = 355,
                            Price = 40
                        },
                        new DrinkOptions()
                        {
                            Name = "Cubeta Bohemia Cristal",
                            Capacity = 0,
                            Price = 380,
                            Extras = "Cubeta con 10 botellas de 355 ml"
                        }
                    }
                },
                new Beer()
                {
                    Name = "Bohemia Weizen",
                    Description = "",
                    Capacity = 355,
                    PhotoPath = "../products/drinks/weizen_167x120.png",
                    Price = 0,
                    LstOptions = new List<DrinkOptions>
                    {
                        new DrinkOptions()
                        {
                            Name = "Bohemia Weizen",
                            Capacity = 355,
                            Price = 40
                        },
                        new DrinkOptions()
                        {
                            Name = "Cubeta Bohemia Weizen",
                            Capacity = 0,
                            Price = 380,
                            Extras = "Cubeta con 10 botellas de 355 ml"
                        }
                    }
                },
                new Beer()
                {
                    Name = "Indio",
                    Description = "",
                    Capacity = 355,
                    PhotoPath = "../products/drinks/indio_167x120.png",
                    Price = 0,
                    LstOptions = new List<DrinkOptions>
                    {
                        new DrinkOptions()
                        {
                            Name = "Indio",
                            Capacity = 355,
                            Price = 35
                        },
                        new DrinkOptions()
                        {
                            Name = "Cubeta Indio",
                            Capacity = 0,
                            Price = 300,
                            Extras = "Cubeta con 10 botellas de 355 ml"
                        }
                    }
                },
                new Beer()
                {
                    Name = "XX Ambar",
                    Description = "",
                    Capacity = 355,
                    PhotoPath = "../products/drinks/ambar_167x120.png",
                    Price = 0,
                    LstOptions = new List<DrinkOptions>
                    {
                        new DrinkOptions()
                        {
                            Name = "XX Ambar",
                            Capacity = 355,
                            Price = 35
                        },
                        new DrinkOptions()
                        {
                            Name = "Cubeta XX Ambar",
                            Capacity = 0,
                            Price = 300,
                            Extras = "Cubeta con 10 botellas de 355 ml"
                        }
                    }
                },
                new Beer()
                {
                    Name = "XX Lager",
                    Description = "",
                    Capacity = 355,
                    PhotoPath = "../products/drinks/lager_167x120.png",
                    Price = 0,
                    LstOptions = new List<DrinkOptions>
                    {
                        new DrinkOptions()
                        {
                            Name = "XX Lager",
                            Capacity = 355,
                            Price = 35
                        },
                        new DrinkOptions()
                        {
                            Name = "Cubeta XX Lager",
                            Capacity = 0,
                            Price = 300,
                            Extras = "Cubeta con 10 botellas de 355 ml"
                        }
                    }
                },
                new Beer()
                {
                    Name = "Heineken",
                    Description = "",
                    Capacity = 355,
                    PhotoPath = "../products/drinks/heineken_167x120.png",
                    Price = 0M,
                    LstOptions = new List<DrinkOptions>
                    {
                        new DrinkOptions()
                        {
                            Name = "Heineken",
                            Capacity = 355,
                            Price = 40M
                        },
                        new DrinkOptions()
                        {
                            Name = "Cubeta Heineken",
                            Capacity = 0,
                            Price = 380M,
                            Extras = "Cubeta con 10 botellas de 355 ml"
                        }
                    }
                },
                new Beer()
                {
                    Name = "Heineken 0.0",
                    Description = "",
                    Capacity = 250,
                    PhotoPath = "../products/drinks/heineken0_167x120.png",
                    Price = 0M,
                    LstOptions = new List<DrinkOptions>
                    {
                        new DrinkOptions()
                        {
                            Name = "Heineken 0.0",
                            Capacity = 355,
                            Price = 40M
                        },
                        new DrinkOptions()
                        {
                            Name = "Cubeta Heineken 0.0",
                            Capacity = 0,
                            Price = 380M,
                            Extras = "Cubeta con 10 botellas de 355 ml"
                        }
                    }
                },
                new Beer()
                {
                    Name = "Amstel",
                    Description = "",
                    Capacity = 355,
                    PhotoPath = "../products/drinks/amstel_167x120.png",
                    Price = 0M,
                    LstOptions = new List<DrinkOptions>
                    {
                        new DrinkOptions()
                        {
                            Name = "Amstel",
                            Capacity = 355,
                            Price = 40M
                        },
                        new DrinkOptions()
                        {
                            Name = "Cubeta Amstel",
                            Capacity = 0,
                            Price = 380M,
                            Extras = "Cubeta con 10 botellas de 355 ml"
                        }
                    }
                },
                new Beer()
                {
                    Name = "Jabali Hellesbock",
                    Description = "",
                    Capacity = 330,
                    PhotoPath = "../products/drinks/helles_167x120.png",
                    Price = 60M,
                    IsCraftBeer = true
                },
                new Beer()
                {
                    Name = "Jabali Bock",
                    Description = "",
                    Capacity = 330,
                    PhotoPath = "../products/drinks/bock_167x120.png",
                    Price = 60M,
                    IsCraftBeer = true
                },
                new Beer()
                {
                    Name = "Jabali Salvajita",
                    Description = "",
                    Capacity = 330,
                    PhotoPath = "../products/drinks/salvajita_167x120.png",
                    Price = 60M,
                    IsCraftBeer = true
                },
                new Beer()
                {
                    Name = "Fortuna Cañita",
                    Description = "",
                    Capacity = 355,
                    PhotoPath = "../products/drinks/cañitas_167x120.png",
                    Price = 75M,
                    IsCraftBeer = true
                },
                new Beer()
                {
                    Name = "Fortuna California",
                    Description = "",
                    Capacity = 355,
                    PhotoPath = "../products/drinks/california_167x120.png",
                    Price = 75M,
                    IsCraftBeer = true
                },
                new Beer()
                {
                    Name = "Fortuna Ippolita",
                    Description = "",
                    Capacity = 355,
                    PhotoPath = "../products/drinks/ippolita_167x120.png",
                    Price = 75M,
                    IsCraftBeer = true
                },
                new Beer()
                {
                    Name = "Fortuna Stout",
                    Description = "",
                    Capacity = 355,
                    PhotoPath = "../products/drinks/stout_167x120.png",
                    Price = 75M,
                    IsCraftBeer = true
                },
                new Beer()
                {
                    Name = "Fortuna Neippolita",
                    Description = "",
                    Capacity = 355,
                    PhotoPath = "../products/drinks/neippolita_167x120.png",
                    Price = 75M,
                    IsCraftBeer = true
                }
            },
                LstSpirits = new List<Spirit>()
            {
                new Spirit()
                {
                    Name = "Tequila 30x30 Blanco",
                    Description = "",
                    Capacity = 0,
                    PhotoPath = "../products/drinks/blanco_167x120.png",
                    Price = 0,
                    LstOptions = new List<DrinkOptions>()
                    {
                        new DrinkOptions()
                        {
                            Name = "Shot",
                            Price = 65,
                            Capacity = 45,
                            Extras = "Incluye 1 mezclador (refresco, agua natural, limónada o naranjada)"
                        },
                        new DrinkOptions()
                        {
                            Name = "Botella",
                            Price = 890,
                            Capacity = 750,
                            Extras = "Incluye 4 mezcladores (refresco, agua natural, limónada o naranjada)"
                        }
                    }
                },
                new Spirit()
                {
                    Name = "Tequila 30x30 Cristalino",
                    Description = "",
                    Capacity = 0,
                    PhotoPath = "../products/drinks/cristalino_167x120.png",
                    Price = 0,
                    LstOptions = new List<DrinkOptions>()
                    {
                        new DrinkOptions()
                        {
                            Name = "Shot",
                            Price = 85,
                            Capacity = 45,
                            Extras = "Incluye 1 mezclador (refresco, agua natural, limónada o naranjada)"
                        },
                        new DrinkOptions()
                        {
                            Name = "Botella",
                            Price = 1590,
                            Capacity = 750,
                            Extras = "Incluye 4 mezcladores (refresco, agua natural, limónada o naranjada)"
                        }
                    }
                },
                new Spirit()
                {
                    Name = "Johnnie Walker Etiqueta Roja",
                    Description = "",
                    Capacity = 0,
                    PhotoPath = "../products/drinks/johnnie_167x120.png",
                    Price = 0,
                    LstOptions = new List<DrinkOptions>()
                    {
                        new DrinkOptions()
                        {
                            Name = "Shot",
                            Price = 65,
                            Capacity = 45,
                            Extras = "Incluye 1 mezclador (refresco, agua natural, limónada o naranjada)"
                        },
                        new DrinkOptions()
                        {
                            Name = "Botella",
                            Price = 890,
                            Capacity = 700,
                            Extras = "Incluye 4 mezcladores (refresco, agua natural, limónada o naranjada)"
                        }
                    }
                }
            }
            };

        var counter = 1;
        var isRowCompleted = false;
        var strBuilder = new StringBuilder();

        FoodSection("Comida", ref strBuilder, ref counter, ref isRowCompleted, menuContent.LstFoods);

        DrinksSection("Refrescos", ref strBuilder, ref counter, ref isRowCompleted, menuContent.LstSodas.Cast<Drink>().ToList());

        DrinksSection("Cerveza", ref strBuilder, ref counter, ref isRowCompleted, menuContent.LstBeers.Where(x => x.IsCraftBeer == false).Cast<Drink>().ToList());

        DrinksSection("Cerveza Artesanal", ref strBuilder, ref counter, ref isRowCompleted, menuContent.LstBeers.Where(x => x.IsCraftBeer == true).Cast<Drink>().ToList());

        DrinksSection("Tequilas y Whiskies", ref strBuilder, ref counter, ref isRowCompleted, menuContent.LstSpirits.Cast<Drink>().ToList());

        FormattedHtml = strBuilder.ToString();
    }

    private void StartHtmlWrapper(Item item,
                                    ref StringBuilder strBuilder,
                                    ref int counter,
                                    ref bool isRowCompleted)
    {
        if (counter == 3)
        {
            counter = 1;
            isRowCompleted = false;
        }

        if (counter == 1)
            strBuilder.Append("<div class='box'>");

        var imgSrc = "";
        if (item.PhotoPath != "")
        {
            imgSrc = $"src='{item.PhotoPath}'";
        }
        else
        {
            imgSrc = $"data-src='holder.js/167x120'";
        }
    }

    private void EndHtmlWrapper(ref StringBuilder strBuilder,
                                ref int counter,
                                ref bool isRowCompleted)
    {
        if (counter == 2)
        {
            strBuilder.Append("</div>");
            isRowCompleted = true;
        }

        counter++;
    }

    private void FoodHtmlBody(Food food,
                            ref StringBuilder strBuilder,
                            ref int counter)
    {
        if (food == null) return;

        var isFlipCard = "";
        var detailsLabel = "";
        var priceInTitle = "";

        if (food.LstOptions != null &&
            food.LstOptions.Count >= 1)
        {
            isFlipCard = "flip-card";
            detailsLabel = "Detalles >>";
        }
        else
        {
            priceInTitle = $"<span class='text-muted'>- Por tan solo <strong>${food.Price}</strong></span>";
        }

        strBuilder.Append(
                    $@"
                    <div class='part-{counter} {isFlipCard}'>
                        <div class='flip-card-inner'>
                            <div class='flip-card-front'>
                                <div class='row'>
                                    <div class='col-5 order-1'>
                                        <img class='img-thumbnail'
                                            {ItemPhoto(food.PhotoPath)}
                                        data-holder-rendered='true'>
                                    </div>
                                    <div class='col-7 order-2'>
                                        <h2>{food.Name} <span class='text-muted'>{food.Portion}</span></h2>
                                        <p class='lead'>{food.Description}</p>
                                            {priceInTitle}
                                    </div>
                                </div>
                                <div class='row'>
                                    <div class='col-12'>
                                        <div style='float: right; font-weight: bold;'>
                                            &nbsp;{detailsLabel}
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class='flip-card-back'>
                                <div class='row'>
                                    <div class='foodPortionsSection' style='margin-bottom:20px;'>
                                        {GetPortionsDetails(food)}
                                    </div>
                                    <div class='foodSauceSection' style='font-size:small;'>
                                        {GetSauceListBy3(food)}
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    ");
    }

    private string GetPortionsDetails(Food food)
    {
        if (food.LstOptions == null) return "";

        var strBuilder = new StringBuilder();

        strBuilder.Append("<div>");
        foreach (var portion in food.LstOptions)
        {
            var dressing = !string.IsNullOrEmpty(portion.Dressing) ? $"({portion.Dressing})" : "";

            strBuilder.Append($"<div style='padding-top:15px;'>Porción de <strong>{portion.PortionGrams} gr {dressing}</strong> a tan solo <strong>${portion.Price}</strong></div>");
        }
        strBuilder.Append("</div>");

        return strBuilder.ToString();
    }

    private string GetSauceList(Food food)
    {
        if (food.LstSauces == null) return "";

        var strBuilder = new StringBuilder();

        strBuilder.Append("<ul class='list-unstyled'>");
        foreach (var sauce in food.LstSauces)
        {
            strBuilder.Append($"<li>{GetEnumDescription(sauce)}{SetSpicyness(LstSauces[sauce.ToString()])}</li>");
        }
        strBuilder.Append("</ul>");

        return strBuilder.ToString();
    }

    private string GetSauceListBy3(Food food)
    {
        if (food.LstSauces == null) return "";

        var strBuilder = new StringBuilder();

        var count = 1;
        foreach (var sauce in food.LstSauces)
        {
            if (count == 4)
                count = 1;

            if (count == 1)
                strBuilder.Append("<ul class='list-unstyled' style='float:left; margin-right:25px;'>");

            strBuilder.Append($"<li>{GetEnumDescription(sauce)}{SetSpicyness(LstSauces[sauce.ToString()])}</li>");

            if (count == 3)
                strBuilder.Append("</ul>");

            count++;
        }

        return strBuilder.ToString();
    }

    public string GetEnumDescription(SauceEnum sauce)
    {
        var enumType = typeof(SauceEnum);
        var memberInfo = enumType.GetMember(sauce.ToString());

        if (memberInfo.Length > 0)
        {
            var displayAttribute = (DescriptionAttribute)Attribute.GetCustomAttribute(memberInfo[0], typeof(DescriptionAttribute));

            if (displayAttribute != null)
            {
                return displayAttribute.Description;
            }
        }

        return sauce.ToString();
    }

    private string SetSpicyness(int spiceLevel)
    {
        var strBuilder = new StringBuilder();

        strBuilder.Append($"<div style='padding-left:15px;'>");
        for (int i = 0; i <= 2; i++)
        {
            var level = (i < spiceLevel ? "color:red;" : "");

            strBuilder.Append($"<i class='fas fa-pepper-hot' style='font-size:15px;{level}'></i>");
        }
        strBuilder.Append($"</div>");

        return strBuilder.ToString();
    }

    private void DrinksHtmlBody(Drink drink,
                                ref StringBuilder strBuilder,
                                ref int counter)
    {
        if (drink == null) return;

        var isFlipCard = "";
        var detailsLabel = "";
        var priceInTitle = "";

        if (drink.LstOptions != null &&
            drink.LstOptions.Count >= 1)
        {
            isFlipCard = "flip-card";
            detailsLabel = "Detalles >>";
        }
        else
        {
            priceInTitle = $"<span class='text-muted'>- Por tan solo <strong>${drink.Price}</strong></span>";
        }

        var capacity = drink.Capacity != 0 ? $"({drink.Capacity} ml)" : "";

        var reduceDrinkSpace = drink.DrinkType == "Spirit" ? "" : "reduceDrinkSpace";

        strBuilder.Append(
                        $@"
                        <div class='part-{counter} {isFlipCard} {reduceDrinkSpace}'>
                            <div class='flip-card-inner'>
                                <div class='flip-card-front'>
                                    <div class='row'>
                                        <div class='col-5 order-1'>
                                            <img class='img-thumbnail'
                                                {ItemPhoto(drink.PhotoPath)}
                                            title='{drink.Name}'
                                            data-holder-rendered='true'>
                                        </div>
                                        <div class='col-7 order-2'>
                                            <h2>{drink.Name}
                                            <br/>
                                            <span class='text-muted'>{capacity}</span></h2>
                                                {priceInTitle}
                                        </div>
                                    </div>
                                    <div class='row'>
                                        <div class='col-12'>
                                            <div style='float: right; font-weight: bold;'>
                                                &nbsp;{detailsLabel}
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class='flip-card-back'>
                                    <div class='row'>
                                        <div class='col-12'>
                                            {GetDrinkOptions(drink)}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        ");
    }

    private string GetDrinkOptions(Drink drink)
    {
        if (drink.LstOptions == null) return "";

        var strBuilder = new StringBuilder();

        strBuilder.Append("<div>");
        foreach (var option in drink.LstOptions)
        {
            var showCapacity = option.Capacity != 0 ? $" de <strong>{option.Capacity} ml</strong>" : "";
            var showExtras = !string.IsNullOrEmpty(option.Extras) ? $"<span class='text-muted'>- {option.Extras}</span>" : "";

            strBuilder.Append($@"
                                <div style='padding-top:15px;'>{option.Name}{showCapacity} a tan solo <strong>${option.Price}</strong>
                                    <br/>
                    {showExtras}
                                </div>");
        }
        strBuilder.Append("</div>");

        return strBuilder.ToString();
    }

    private string ItemPhoto(string photoPath)
    {
        var src = "";
        if (photoPath != "")
        {
            src = $"src='{photoPath}'";
        }
        else
        {
            src = $"data-src='holder.js/167x120'";
        }

        return src;
    }

    private void EndOfSection(ref StringBuilder strBuilder, ref bool isRowCompleted)
    {
        if (!isRowCompleted)
        {
            strBuilder.Append(
                                            $@"<div class='part-2 flip-card' style='border: none;'>
                            <div class='row'>
                                <div class='col-7 order-2'>
                                </div>
                                <div class='col-5 order-1'>
                                </div>
                            </div>
                        </div>");
        }

        strBuilder.Append("</div>");

        strBuilder.Append($"<div>");
    }

    private void FoodSection(string sectionName, ref StringBuilder strBuilder, ref int counter, ref bool isRowCompleted, List<Food> lstFoods)
    {
        strBuilder.Append($"<br/><br/>");
        strBuilder.Append($"<div>");

        counter = 1;
        isRowCompleted = false;
        strBuilder.Append($"<h1>{sectionName}</h1>");
        foreach (var food in lstFoods.OrderBy(x => x.Name))
        {
            StartHtmlWrapper(food, ref strBuilder, ref counter, ref isRowCompleted);

            FoodHtmlBody(food, ref strBuilder, ref counter);

            EndHtmlWrapper(ref strBuilder, ref counter, ref isRowCompleted);
        }

        EndOfSection(ref strBuilder, ref isRowCompleted);
    }

    private void DrinksSection(string sectionName, ref StringBuilder strBuilder, ref int counter, ref bool isRowCompleted, List<Drink> lstDrinks)
    {
        var adjustmentClass = !isRowCompleted ? "adjustmentClass" : "";

        strBuilder.Append($"<br/><br/>");
        strBuilder.Append($"<div class='{adjustmentClass}'>");

        counter = 1;
        isRowCompleted = false;
        strBuilder.Append($"<h1>{sectionName}</h1>");
        foreach (var drink in lstDrinks)
        {
            StartHtmlWrapper(drink, ref strBuilder, ref counter, ref isRowCompleted);

            DrinksHtmlBody(drink, ref strBuilder, ref counter);

            EndHtmlWrapper(ref strBuilder, ref counter, ref isRowCompleted);
        }

        EndOfSection(ref strBuilder, ref isRowCompleted);
    }
}

<style type="text/css">
    img {
        width: 120px;
        height: 167px;
    }

    .box {
        display: flex;
        justify-content: center;
        flex-flow: row nowrap;
    }

    .part-1, .part-2 {
        flex: 0 0 50%;
        border: 1px solid #f1f1f1;
        margin: 5px;
        padding: 5px;
        min-height: 230px;
    }

    @@media screen and (max-width:1000px) {
        .box {
            flex-flow: column nowrap;
        }

        .text-muted {
            font-size: small;
        }

        .adjustmentClass {
            margin-top: -270px;
        }

        .part-1, .part-2 {
            min-height: 240px;
        }

            .part-1.reduceDrinkSpace, .part-2.reduceDrinkSpace {
                min-height: 150px;
            }
    }

    @@media screen and (max-width:370px) {

        .part-1, .part-2 {
            width: 300px;
        }
    }

    .flip-card {
        background-color: transparent;
        perspective: 1000px;
    }

    .flip-card-inner {
        position: relative;
        width: 100%;
        height: 100%;
        transition: transform 0.8s;
        transform-style: preserve-3d;
    }

    .flip-card:hover .flip-card-inner {
        transform: rotateY(180deg);
    }

    .flip-card-front, .flip-card-back {
        position: absolute;
        width: 100%;
        height: 100%;
        -webkit-backface-visibility: hidden; /* Safari */
        backface-visibility: hidden;
    }

    .flip-card-front {
        color: black;
    }

    .flip-card-back {
        transform: rotateY(180deg);
    }
</style>

<script src="/vendors/holderjs/js/holder.js"></script>

<link href="/vendors/fontawesome/css/all.css" rel="stylesheet" />
<link href="/vendors/fontawesome/css/all.min.css" rel="stylesheet" />

<script src="/vendors/fontawesome/js/all.js"></script>
<script src="/vendors/fontawesome/js/all.min.js"></script>

<div>
    <div class="container">
        @((MarkupString)FormattedHtml)
    </div>
</div>

<script type="text/javascript">

    jQuery(function ($) { 
    
        calculateWindowSize();
    });

    window.addEventListener('resize', function (event) {
        
        calculateWindowSize();
    }, true);

    function calculateWindowSize() {

        var w = window.innerWidth;
        var h = window.innerHeight;

        if (w >= 770) {

            $('.foodPortionsSection').addClass('col-6');
            $('.foodPortionsSection').removeClass('col-12');

            $('.foodSauceSection').addClass('col-6');
            $('.foodSauceSection').removeClass('col-12');
        } else {

            $('.foodPortionsSection').addClass('col-12');
            $('.foodPortionsSection').removeClass('col-6');

            $('.foodSauceSection').addClass('col-12');
            $('.foodSauceSection').removeClass('col-6');
        }
    };

</script>